// Generated by purs version 0.15.4
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Effect_Console from "../Effect.Console/index.js";
import * as Test_QuickCheck from "../Test.QuickCheck/index.js";
import * as Test_QuickCheck_Arbitrary from "../Test.QuickCheck.Arbitrary/index.js";
import * as Test_QuickCheck_Gen from "../Test.QuickCheck.Gen/index.js";
var quickCheck$prime = /* #__PURE__ */ Test_QuickCheck["quickCheck$prime"](/* #__PURE__ */ Test_QuickCheck.testableGen(Test_QuickCheck.testableBoolean));
var map = /* #__PURE__ */ Data_Functor.map(Test_QuickCheck_Gen.functorGen);
var checkCategoryGen = function (dictCategory) {
    var compose = Control_Semigroupoid.compose(dictCategory.Semigroupoid0());
    var identity = Control_Category.identity(dictCategory);
    return function (dictArbitrary) {
        return function (dictEq) {
            var eq = Data_Eq.eq(dictEq);
            return function (gen) {
                var identity1 = function (p) {
                    return eq(compose(identity)(p))(p) && eq(compose(p)(identity))(p);
                };
                return function __do() {
                    Effect_Console.log("Checking 'Identity' law for Category")();
                    return quickCheck$prime(1000)(map(identity1)(gen))();
                };
            };
        };
    };
};
var checkCategory = function (dictCategory) {
    var checkCategoryGen1 = checkCategoryGen(dictCategory);
    return function (dictArbitrary) {
        var checkCategoryGen2 = checkCategoryGen1(dictArbitrary);
        var arbitrary = Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary);
        return function (dictEq) {
            var checkCategoryGen3 = checkCategoryGen2(dictEq);
            return function (v) {
                return checkCategoryGen3(arbitrary);
            };
        };
    };
};
export {
    checkCategory,
    checkCategoryGen
};
