// Generated by purs version 0.15.4
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Set from "../Data.Set/index.js";
import * as Data_Set_Ordered from "../Data.Set.Ordered/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unfoldable from "../Data.Unfoldable/index.js";
import * as TsBridge_DTS from "../TsBridge.DTS/index.js";
var append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var join = /* #__PURE__ */ Control_Bind.join(Control_Bind.bindArray);
var isEmpty = /* #__PURE__ */ Data_Set_Ordered.isEmpty(TsBridge_DTS.eqTsName);
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var toUnfoldable = /* #__PURE__ */ Data_Set_Ordered.toUnfoldable(Data_Unfoldable.unfoldableArray);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showNumber);
var mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);
var bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Control_Bind.bindArray);
var bind = /* #__PURE__ */ Control_Bind.bind(Control_Bind.bindArray);
var toUnfoldable1 = /* #__PURE__ */ Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray);
var fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray);
var toUnfoldable2 = /* #__PURE__ */ Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray);
var TsTokConst = /* #__PURE__ */ (function () {
    function TsTokConst() {

    };
    TsTokConst.value = new TsTokConst();
    return TsTokConst;
})();
var TsTokDefault = /* #__PURE__ */ (function () {
    function TsTokDefault() {

    };
    TsTokDefault.value = new TsTokDefault();
    return TsTokDefault;
})();
var TsTokExport = /* #__PURE__ */ (function () {
    function TsTokExport() {

    };
    TsTokExport.value = new TsTokExport();
    return TsTokExport;
})();
var TsTokDeclare = /* #__PURE__ */ (function () {
    function TsTokDeclare() {

    };
    TsTokDeclare.value = new TsTokDeclare();
    return TsTokDeclare;
})();
var TsTokImport = /* #__PURE__ */ (function () {
    function TsTokImport() {

    };
    TsTokImport.value = new TsTokImport();
    return TsTokImport;
})();
var TsTokVoid = /* #__PURE__ */ (function () {
    function TsTokVoid() {

    };
    TsTokVoid.value = new TsTokVoid();
    return TsTokVoid;
})();
var TsTokReadonly = /* #__PURE__ */ (function () {
    function TsTokReadonly() {

    };
    TsTokReadonly.value = new TsTokReadonly();
    return TsTokReadonly;
})();
var TsTokUnique = /* #__PURE__ */ (function () {
    function TsTokUnique() {

    };
    TsTokUnique.value = new TsTokUnique();
    return TsTokUnique;
})();
var TsTokAs = /* #__PURE__ */ (function () {
    function TsTokAs() {

    };
    TsTokAs.value = new TsTokAs();
    return TsTokAs;
})();
var TsTokFrom = /* #__PURE__ */ (function () {
    function TsTokFrom() {

    };
    TsTokFrom.value = new TsTokFrom();
    return TsTokFrom;
})();
var TsTokType = /* #__PURE__ */ (function () {
    function TsTokType() {

    };
    TsTokType.value = new TsTokType();
    return TsTokType;
})();
var TsTokSymbol = /* #__PURE__ */ (function () {
    function TsTokSymbol() {

    };
    TsTokSymbol.value = new TsTokSymbol();
    return TsTokSymbol;
})();
var TsTokString = /* #__PURE__ */ (function () {
    function TsTokString() {

    };
    TsTokString.value = new TsTokString();
    return TsTokString;
})();
var TsTokNumber = /* #__PURE__ */ (function () {
    function TsTokNumber() {

    };
    TsTokNumber.value = new TsTokNumber();
    return TsTokNumber;
})();
var TsTokBoolean = /* #__PURE__ */ (function () {
    function TsTokBoolean() {

    };
    TsTokBoolean.value = new TsTokBoolean();
    return TsTokBoolean;
})();
var TsTokSemicolon = /* #__PURE__ */ (function () {
    function TsTokSemicolon() {

    };
    TsTokSemicolon.value = new TsTokSemicolon();
    return TsTokSemicolon;
})();
var TsTokAsterisk = /* #__PURE__ */ (function () {
    function TsTokAsterisk() {

    };
    TsTokAsterisk.value = new TsTokAsterisk();
    return TsTokAsterisk;
})();
var TsTokOpenParen = /* #__PURE__ */ (function () {
    function TsTokOpenParen() {

    };
    TsTokOpenParen.value = new TsTokOpenParen();
    return TsTokOpenParen;
})();
var TsTokCloseParen = /* #__PURE__ */ (function () {
    function TsTokCloseParen() {

    };
    TsTokCloseParen.value = new TsTokCloseParen();
    return TsTokCloseParen;
})();
var TsTokOpenBracket = /* #__PURE__ */ (function () {
    function TsTokOpenBracket() {

    };
    TsTokOpenBracket.value = new TsTokOpenBracket();
    return TsTokOpenBracket;
})();
var TsTokCloseBracket = /* #__PURE__ */ (function () {
    function TsTokCloseBracket() {

    };
    TsTokCloseBracket.value = new TsTokCloseBracket();
    return TsTokCloseBracket;
})();
var TsTokOpenBrace = /* #__PURE__ */ (function () {
    function TsTokOpenBrace() {

    };
    TsTokOpenBrace.value = new TsTokOpenBrace();
    return TsTokOpenBrace;
})();
var TsTokCloseBrace = /* #__PURE__ */ (function () {
    function TsTokCloseBrace() {

    };
    TsTokCloseBrace.value = new TsTokCloseBrace();
    return TsTokCloseBrace;
})();
var TsTokOpenAngle = /* #__PURE__ */ (function () {
    function TsTokOpenAngle() {

    };
    TsTokOpenAngle.value = new TsTokOpenAngle();
    return TsTokOpenAngle;
})();
var TsTokCloseAngle = /* #__PURE__ */ (function () {
    function TsTokCloseAngle() {

    };
    TsTokCloseAngle.value = new TsTokCloseAngle();
    return TsTokCloseAngle;
})();
var TsTokComma = /* #__PURE__ */ (function () {
    function TsTokComma() {

    };
    TsTokComma.value = new TsTokComma();
    return TsTokComma;
})();
var TsTokEquals = /* #__PURE__ */ (function () {
    function TsTokEquals() {

    };
    TsTokEquals.value = new TsTokEquals();
    return TsTokEquals;
})();
var TsTokColon = /* #__PURE__ */ (function () {
    function TsTokColon() {

    };
    TsTokColon.value = new TsTokColon();
    return TsTokColon;
})();
var TsTokDot = /* #__PURE__ */ (function () {
    function TsTokDot() {

    };
    TsTokDot.value = new TsTokDot();
    return TsTokDot;
})();
var TsTokFatArrow = /* #__PURE__ */ (function () {
    function TsTokFatArrow() {

    };
    TsTokFatArrow.value = new TsTokFatArrow();
    return TsTokFatArrow;
})();
var TsTokQuestionMark = /* #__PURE__ */ (function () {
    function TsTokQuestionMark() {

    };
    TsTokQuestionMark.value = new TsTokQuestionMark();
    return TsTokQuestionMark;
})();
var TsTokWhitespace = /* #__PURE__ */ (function () {
    function TsTokWhitespace() {

    };
    TsTokWhitespace.value = new TsTokWhitespace();
    return TsTokWhitespace;
})();
var TsTokNewline = /* #__PURE__ */ (function () {
    function TsTokNewline() {

    };
    TsTokNewline.value = new TsTokNewline();
    return TsTokNewline;
})();
var TsTokIdentifier = /* #__PURE__ */ (function () {
    function TsTokIdentifier(value0) {
        this.value0 = value0;
    };
    TsTokIdentifier.create = function (value0) {
        return new TsTokIdentifier(value0);
    };
    return TsTokIdentifier;
})();
var TsTokStringLiteral = /* #__PURE__ */ (function () {
    function TsTokStringLiteral(value0) {
        this.value0 = value0;
    };
    TsTokStringLiteral.create = function (value0) {
        return new TsTokStringLiteral(value0);
    };
    return TsTokStringLiteral;
})();
var TsTokNumberLiteral = /* #__PURE__ */ (function () {
    function TsTokNumberLiteral(value0) {
        this.value0 = value0;
    };
    TsTokNumberLiteral.create = function (value0) {
        return new TsTokNumberLiteral(value0);
    };
    return TsTokNumberLiteral;
})();
var TsTokLineComment = /* #__PURE__ */ (function () {
    function TsTokLineComment(value0) {
        this.value0 = value0;
    };
    TsTokLineComment.create = function (value0) {
        return new TsTokLineComment(value0);
    };
    return TsTokLineComment;
})();
var tokenizeTsName = {
    tokenize: function (v) {
        return [ new TsTokIdentifier(v.value0) ];
    }
};
var tokenizeTsModulePath = {
    tokenize: function (v) {
        return [ new TsTokStringLiteral(v.value0) ];
    }
};
var tokenizeTsModuleAlias = {
    tokenize: function (v) {
        return [ new TsTokIdentifier(v) ];
    }
};
var tokenizeTsDeclVisibility = {
    tokenize: function (v) {
        if (v instanceof TsBridge_DTS.Private) {
            return [  ];
        };
        if (v instanceof TsBridge_DTS.Public) {
            return [ TsTokExport.value, TsTokWhitespace.value ];
        };
        throw new Error("Failed pattern match at TsBridge.Print (line 192, column 1 - line 194, column 53): " + [ v.constructor.name ]);
    }
};
var wrap = function (p) {
    return function (q) {
        return function (x) {
            return append(p)(append(x)(q));
        };
    };
};
var wrapAngles = /* #__PURE__ */ (function () {
    return wrap([ TsTokOpenAngle.value ])([ TsTokCloseAngle.value ]);
})();
var wrapBraces = /* #__PURE__ */ (function () {
    return wrap([ TsTokOpenBrace.value ])([ TsTokCloseBrace.value ]);
})();
var wrapParens = /* #__PURE__ */ (function () {
    return wrap([ TsTokOpenParen.value ])([ TsTokCloseParen.value ]);
})();
var tokenize = function (dict) {
    return dict.tokenize;
};
var tokenize1 = /* #__PURE__ */ tokenize(tokenizeTsModuleAlias);
var tokenize2 = /* #__PURE__ */ tokenize(tokenizeTsModulePath);
var tokenize3 = /* #__PURE__ */ tokenize(tokenizeTsName);
var tokenize4 = /* #__PURE__ */ tokenize(tokenizeTsDeclVisibility);
var tokenizeTsImport = {
    tokenize: function (v) {
        return append([ TsTokImport.value, TsTokWhitespace.value, TsTokAsterisk.value, TsTokWhitespace.value, TsTokAs.value, TsTokWhitespace.value ])(append(tokenize1(v.value0))(append([ TsTokWhitespace.value, TsTokFrom.value, TsTokWhitespace.value ])(tokenize2(v.value1))));
    }
};
var tokenize5 = /* #__PURE__ */ tokenize(tokenizeTsImport);
var tokenizeTsQualName = {
    tokenize: function (v) {
        return append(Data_Maybe.maybe([  ])(function (n) {
            return append(tokenize1(n))([ TsTokDot.value ]);
        })(v.value0))(tokenize3(v.value1));
    }
};
var tokenize6 = /* #__PURE__ */ tokenize(tokenizeTsQualName);
var sepBy = function (sep) {
    return function (xs) {
        return join(Data_Array.intersperse(sep)(xs));
    };
};
var sepByComma = /* #__PURE__ */ (function () {
    return sepBy([ TsTokComma.value, TsTokWhitespace.value ]);
})();
var tokenizeTsTypeArgsQuant = {
    tokenize: function (v) {
        if (isEmpty(unwrap(v))) {
            return [  ];
        };
        return wrapAngles(sepByComma(map(tokenize3)(toUnfoldable(unwrap(v)))));
    }
};
var tokenize7 = /* #__PURE__ */ tokenize(tokenizeTsTypeArgsQuant);
var sepByDoubleNewline = /* #__PURE__ */ (function () {
    return sepBy([ TsTokNewline.value, TsTokNewline.value ]);
})();
var printTsFilePath = function (v) {
    return v.value0 + ("." + v.value1);
};
var printToken = function (v) {
    if (v instanceof TsTokConst) {
        return "const";
    };
    if (v instanceof TsTokDefault) {
        return "default";
    };
    if (v instanceof TsTokExport) {
        return "export";
    };
    if (v instanceof TsTokDeclare) {
        return "declare";
    };
    if (v instanceof TsTokImport) {
        return "import";
    };
    if (v instanceof TsTokVoid) {
        return "void";
    };
    if (v instanceof TsTokReadonly) {
        return "readonly";
    };
    if (v instanceof TsTokUnique) {
        return "unique";
    };
    if (v instanceof TsTokAs) {
        return "as";
    };
    if (v instanceof TsTokFrom) {
        return "from";
    };
    if (v instanceof TsTokType) {
        return "type";
    };
    if (v instanceof TsTokSymbol) {
        return "symbol";
    };
    if (v instanceof TsTokNumber) {
        return "number";
    };
    if (v instanceof TsTokString) {
        return "string";
    };
    if (v instanceof TsTokBoolean) {
        return "boolean";
    };
    if (v instanceof TsTokSemicolon) {
        return ";";
    };
    if (v instanceof TsTokAsterisk) {
        return "*";
    };
    if (v instanceof TsTokOpenParen) {
        return "(";
    };
    if (v instanceof TsTokCloseParen) {
        return ")";
    };
    if (v instanceof TsTokOpenBracket) {
        return "[";
    };
    if (v instanceof TsTokCloseBracket) {
        return "]";
    };
    if (v instanceof TsTokOpenBrace) {
        return "{";
    };
    if (v instanceof TsTokCloseBrace) {
        return "}";
    };
    if (v instanceof TsTokOpenAngle) {
        return "<";
    };
    if (v instanceof TsTokCloseAngle) {
        return ">";
    };
    if (v instanceof TsTokComma) {
        return ",";
    };
    if (v instanceof TsTokEquals) {
        return "=";
    };
    if (v instanceof TsTokColon) {
        return ":";
    };
    if (v instanceof TsTokDot) {
        return ".";
    };
    if (v instanceof TsTokFatArrow) {
        return "=>";
    };
    if (v instanceof TsTokQuestionMark) {
        return "?";
    };
    if (v instanceof TsTokWhitespace) {
        return " ";
    };
    if (v instanceof TsTokNewline) {
        return "\x0a";
    };
    if (v instanceof TsTokIdentifier) {
        return v.value0;
    };
    if (v instanceof TsTokStringLiteral) {
        return "'" + (v.value0 + "'");
    };
    if (v instanceof TsTokNumberLiteral) {
        return show(v.value0);
    };
    if (v instanceof TsTokLineComment) {
        return "// " + (v.value0 + "\x0a");
    };
    throw new Error("Failed pattern match at TsBridge.Print (line 244, column 14 - line 322, column 23): " + [ v.constructor.name ]);
};
var printTsName = function (x) {
    return Data_String_Common.joinWith("")(mapFlipped(tokenize3(x))(printToken));
};
var postfix = function (tok) {
    return function (xs) {
        return join(mapFlipped(xs)(function (v) {
            return append(v)(tok);
        }));
    };
};
var postfixNewline = /* #__PURE__ */ (function () {
    return postfix([ TsTokNewline.value ]);
})();
var applyWhenNotEmpty = function (v) {
    return function (xs) {
        if (Data_Array["null"](xs)) {
            return [  ];
        };
        return v(xs);
    };
};
var tokenizeTsTypeArgs = {
    tokenize: function (v) {
        if (Data_Array.length(v) === 0) {
            return [  ];
        };
        return wrapAngles(sepByComma(map(tokenize(tokenizeTsType))(v)));
    }
};
var tokenizeTsType = {
    tokenize: function (v) {
        if (v instanceof TsBridge_DTS.TsTypeNumber) {
            return [ TsTokNumber.value ];
        };
        if (v instanceof TsBridge_DTS.TsTypeString) {
            return [ TsTokString.value ];
        };
        if (v instanceof TsBridge_DTS.TsTypeBoolean) {
            return [ TsTokBoolean.value ];
        };
        if (v instanceof TsBridge_DTS.TsTypeArray) {
            return append([ new TsTokIdentifier("Array") ])(wrapAngles(tokenize(tokenizeTsType)(v.value0)));
        };
        if (v instanceof TsBridge_DTS.TsTypeRecord) {
            return wrapBraces(applyWhenNotEmpty(function (xs$prime) {
                return append([ TsTokWhitespace.value ])(bindFlipped(tokenize(tokenizeTsRecordField))(xs$prime));
            })(v.value0));
        };
        if (v instanceof TsBridge_DTS.TsTypeFunction) {
            return append(tokenize7(v.value0))(append(wrapParens(bindFlipped(tokenize(tokenizeTsFnArg))(v.value1)))(append([ TsTokWhitespace.value, TsTokFatArrow.value, TsTokWhitespace.value ])(tokenize(tokenizeTsType)(v.value2))));
        };
        if (v instanceof TsBridge_DTS.TsTypeConstructor) {
            return append(tokenize6(v.value0))(tokenize(tokenizeTsTypeArgs)(v.value1));
        };
        if (v instanceof TsBridge_DTS.TsTypeUniqueSymbol) {
            return [ TsTokUnique.value, TsTokWhitespace.value, TsTokSymbol.value ];
        };
        if (v instanceof TsBridge_DTS.TsTypeVar) {
            return tokenize3(v.value0);
        };
        if (v instanceof TsBridge_DTS.TsTypeVoid) {
            return [ TsTokVoid.value ];
        };
        throw new Error("Failed pattern match at TsBridge.Print (line 133, column 14 - line 165, column 32): " + [ v.constructor.name ]);
    }
};
var tokenizeTsRecordField = {
    tokenize: function (v) {
        return append((function () {
            if (v.value1.readonly) {
                return [ TsTokReadonly.value, TsTokWhitespace.value ];
            };
            return [  ];
        })())(append(tokenize3(v.value0))(append((function () {
            if (v.value1.optional) {
                return [ TsTokWhitespace.value ];
            };
            return [  ];
        })())(append([ TsTokColon.value, TsTokWhitespace.value ])(append(tokenize(tokenizeTsType)(v.value2))([ TsTokSemicolon.value, TsTokWhitespace.value ])))));
    }
};
var tokenizeTsFnArg = {
    tokenize: function (v) {
        return append(tokenize3(v.value0))(append([ TsTokColon.value, TsTokWhitespace.value ])(tokenize(tokenizeTsType)(v.value1)));
    }
};
var tokenize8 = /* #__PURE__ */ tokenize(tokenizeTsType);
var printTsType = function (x) {
    return Data_String_Common.joinWith("")(mapFlipped(tokenize8(x))(printToken));
};
var tokenizeTsDeclaration = {
    tokenize: function (v) {
        if (v instanceof TsBridge_DTS.TsDeclTypeDef) {
            return append(tokenize4(v.value1))(append([ TsTokType.value, TsTokWhitespace.value ])(append(tokenize3(v.value0))(append(applyWhenNotEmpty(function ($123) {
                return wrapAngles(sepByComma($123));
            })(map(tokenize3)(toUnfoldable(unwrap(v.value2)))))(append([ TsTokWhitespace.value, TsTokEquals.value, TsTokWhitespace.value ])(tokenize8(v.value3))))));
        };
        if (v instanceof TsBridge_DTS.TsDeclValueDef) {
            return append(tokenize4(v.value1))(append([ TsTokConst.value, TsTokWhitespace.value ])(append(tokenize3(v.value0))(append([ TsTokWhitespace.value, TsTokColon.value, TsTokWhitespace.value ])(tokenize8(v.value2)))));
        };
        if (v instanceof TsBridge_DTS.TsDeclComments) {
            return bind(v.value0)(function (x) {
                return [ new TsTokLineComment(x) ];
            });
        };
        throw new Error("Failed pattern match at TsBridge.Print (line 197, column 14 - line 217, column 42): " + [ v.constructor.name ]);
    }
};
var tokenize9 = /* #__PURE__ */ tokenize(tokenizeTsDeclaration);
var printTsDeclarations = function (x) {
    return mapFlipped(mapFlipped(x)(tokenize9))((function () {
        var $124 = Data_String_Common.joinWith("");
        var $125 = map(printToken);
        return function ($126) {
            return $124($125($126));
        };
    })());
};
var tokenizeTsModule = {
    tokenize: function (v) {
        return append(applyWhenNotEmpty(function ($127) {
            return (function (v1) {
                return append(v1)([ TsTokNewline.value ]);
            })(postfixNewline($127));
        })(mapFlipped(toUnfoldable1(v.value0))(tokenize5)))(sepByDoubleNewline(mapFlipped(v.value1)(tokenize9)));
    }
};
var tokenize10 = /* #__PURE__ */ tokenize(tokenizeTsModule);
var printTsModule = function (x) {
    return Data_String_Common.joinWith("")(mapFlipped(tokenize10(x))(printToken));
};
var printTsProgram = function (v) {
    return fromFoldable(mapFlipped(toUnfoldable2(v.value0))(function (v1) {
        return new Data_Tuple.Tuple(printTsFilePath(v1.value0), printTsModule(v1.value1));
    }));
};
export {
    printTsDeclarations,
    printTsName,
    printTsProgram,
    printTsType
};
