// Generated by purs version 0.15.4
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Effect_Console from "../Effect.Console/index.js";
import * as Test_QuickCheck from "../Test.QuickCheck/index.js";
import * as Test_QuickCheck_Arbitrary from "../Test.QuickCheck.Arbitrary/index.js";
import * as Test_QuickCheck_Gen from "../Test.QuickCheck.Gen/index.js";
var quickCheck$prime = /* #__PURE__ */ Test_QuickCheck["quickCheck$prime"](/* #__PURE__ */ Test_QuickCheck.testableGen(Test_QuickCheck.testableBoolean));
var lift3 = /* #__PURE__ */ Control_Apply.lift3(Test_QuickCheck_Gen.applyGen);
var checkSemigroupoidGen = function (dictSemigroupoid) {
    var compose = Control_Semigroupoid.compose(dictSemigroupoid);
    return function (dictEq) {
        var eq = Data_Eq.eq(dictEq);
        return function (genbc) {
            return function (gencd) {
                return function (gende) {
                    var associativity = function (p) {
                        return function (q) {
                            return function (r) {
                                return eq(compose(p)(compose(q)(r)))(compose(compose(p)(q))(r));
                            };
                        };
                    };
                    return function __do() {
                        Effect_Console.log("Checking 'Associativity' law for Semigroupoid")();
                        return quickCheck$prime(1000)(lift3(associativity)(gende)(gencd)(genbc))();
                    };
                };
            };
        };
    };
};
var checkSemigroupoid = function (dictSemigroupoid) {
    var checkSemigroupoidGen1 = checkSemigroupoidGen(dictSemigroupoid);
    return function (dictArbitrary) {
        var arbitrary = Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary);
        return function (dictArbitrary1) {
            var arbitrary1 = Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary1);
            return function (dictArbitrary2) {
                var arbitrary2 = Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary2);
                return function (dictEq) {
                    var checkSemigroupoidGen2 = checkSemigroupoidGen1(dictEq);
                    return function (v) {
                        return checkSemigroupoidGen2(arbitrary)(arbitrary1)(arbitrary2);
                    };
                };
            };
        };
    };
};
export {
    checkSemigroupoid,
    checkSemigroupoidGen
};
