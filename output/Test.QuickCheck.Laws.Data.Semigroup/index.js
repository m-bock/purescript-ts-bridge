// Generated by purs version 0.15.4
import * as Control_Apply from "../Control.Apply/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Effect_Console from "../Effect.Console/index.js";
import * as Test_QuickCheck from "../Test.QuickCheck/index.js";
import * as Test_QuickCheck_Arbitrary from "../Test.QuickCheck.Arbitrary/index.js";
import * as Test_QuickCheck_Gen from "../Test.QuickCheck.Gen/index.js";
var quickCheck$prime = /* #__PURE__ */ Test_QuickCheck["quickCheck$prime"](/* #__PURE__ */ Test_QuickCheck.testableGen(Test_QuickCheck.testableBoolean));
var lift3 = /* #__PURE__ */ Control_Apply.lift3(Test_QuickCheck_Gen.applyGen);
var checkSemigroupGen = function (dictSemigroup) {
    var append = Data_Semigroup.append(dictSemigroup);
    return function (dictEq) {
        var eq = Data_Eq.eq(dictEq);
        return function (gen) {
            var associativity = function (x) {
                return function (y) {
                    return function (z) {
                        return eq(append(append(x)(y))(z))(append(x)(append(y)(z)));
                    };
                };
            };
            return function __do() {
                Effect_Console.log("Checking 'Associativity' law for Semigroup")();
                return quickCheck$prime(1000)(lift3(associativity)(gen)(gen)(gen))();
            };
        };
    };
};
var checkSemigroup = function (dictSemigroup) {
    var checkSemigroupGen1 = checkSemigroupGen(dictSemigroup);
    return function (dictArbitrary) {
        var arbitrary = Test_QuickCheck_Arbitrary.arbitrary(dictArbitrary);
        return function (dictEq) {
            var checkSemigroupGen2 = checkSemigroupGen1(dictEq);
            return function (v) {
                return checkSemigroupGen2(arbitrary);
            };
        };
    };
};
export {
    checkSemigroup,
    checkSemigroupGen
};
